@page "/"

<style>

</style>

<div class="diceContainer">
    <h1>Dice Roller</h1>



    <div class="diceBox">
        <div class="die" @onclick="(() => AddDie(4))">
            <div class="">D 4</div>
        </div>
        <div class="die" @onclick="(() => AddDie(6))">
            <div class="">D 6</div>
        </div>
        <div class="die" @onclick="(() => AddDie(8))">
            <div class="">D 8</div>
        </div>
        <div class="die" @onclick="(() => AddDie(10))">
            <div class="">D 10</div>
        </div>
        <div class="die" @onclick="(() => AddDie(12))">
            <div class="">D 12</div>
        </div>
        <div class="die" @onclick="(() => AddDie(20))">
            <div class="">D 20</div>
        </div>
    </div>

    <button @onclick="RollDice">Roll Dice</button>
    <button @onclick="ClearDice">Clear Dice</button>
    <hr />
    <div class="diceBox">
        @foreach (var die in dice)
        {
            <div @onclick="(() => RemoveDie(die))" class="die">
                <div class="dieLabel">D @die.Sides</div>
                <div>@die.Result</div>
            </div>
        }
    </div>
    <div>
        Total: @Total
    </div>
</div>

@code {

    List<Die> dice = new List<Die>();
    int Total = 0;

    protected override void OnInitialized()
    {
        dice.Add(new Die() { Name = "D20", Sides = 20 });
        dice.Add(new Die() { Name = "D", Sides = 30 });
        dice.Add(new Die() { Name = "D", Sides = 100 });
        dice.Add(new Die() { Name = "D", Sides = 5 });
    }

    private void RollDice()
    {
        dice.ForEach(m =>
        {
            m.RollDie();
        });
        CalculateDice();
        StateHasChanged();
    }

    private void AddDie(int sides)
    {
        Die newDice = new Die() { Name = "D", Sides = sides };
        dice.Add(newDice);
        if (Total > 0)
        {
            newDice.RollDie();
            CalculateDice();
        }

        StateHasChanged();
    }

    private void RemoveDie(Die die)
    {
        dice.Remove(die);
        CalculateDice();
    }

    private void ClearDice()
    {
        dice = new List<Die>();
        Total = 0;
        StateHasChanged();
    }

    private void CalculateDice()
    {
        Total = 0;
        dice.ForEach(m =>
        {
            Total += m.Result.HasValue ? m.Result.Value : 0;
        });
        StateHasChanged();
    }
}